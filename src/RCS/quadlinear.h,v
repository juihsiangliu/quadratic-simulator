head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2010.06.25.09.42.34;	author r97124;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.25.07.22.51;	author r97124;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.24.09.04.14;	author r97124;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@#ifndef QUADLINEAR_H
#define QUADLINEAR_H

#include "parser.h"
#include "quadmatrix.h"
#include "sparsequadmatrix.h"
#include "partition_double.h"
#include "solvesparsequadmatrix.h"

// QuadMatrix *result should be nodeNum * stepNum
// result should be pre-allocated
//void quadLinearSimulation(const NetlistStampResultQuad *netlist,QuadMatrix *result,const int threadNum);


void sparseQuadLinearSimulation(const SparseNetlistQuad *netlist,QuadMatrix *result,const int threadNum,const int dumpNodeIndex);

#endif
@


1.2
log
@*** empty log message ***
@
text
@d8 1
@


1.1
log
@Initial revision
@
text
@d7 1
@
